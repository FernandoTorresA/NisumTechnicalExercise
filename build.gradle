plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    //para la persistencia en java 17... en 16 era con Javax
    implementation group: 'jakarta.ws.rs', name: 'jakarta.ws.rs-api', version: '4.0.0'

    //para la persistencia
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //para ahorrarme la creaci√≥n de getter & setters y log4j
    annotationProcessor 'org.projectlombok:lombok'

    //importados en el initializer
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'

    // la base de datos en memoria
    implementation('org.hsqldb:hsqldb:2.7.1')

    // jwt
    implementation("io.jsonwebtoken:jjwt:0.12.6")

    // spring security para las passwords
    implementation("org.springframework.security:spring-security-core:6.5.0")

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // dependencias para los tests
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")
    testImplementation("org.mockito:mockito-core:5.4.0")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
